services:
  qdrant:
    image: 'qdrant/qdrant:latest'
    ports:
      - '6334:6334'
  mongo-express2:
    image: mongo-express
    ports:
      - 8083:8081
    environment:
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: MongoDB2019!
    links:
      - mongo
    networks:
      - mongo-compose-network

  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: MongoDB2019!
    ports:
      - "27017:27017"
    networks:
      - mongo-compose-network

  prometheus:
    image: prom/prometheus
    volumes:
      - "./prometheus-config.yml:/etc/prometheus/prometheus.yml"
    networks:
      - net
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 9090:9090


  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - net

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "4317:4317"
    environment:
      - COLLECTOR_OTLP_ENABLED=true

# ...

volumes:
  # ...
  grafana-storage: {}

networks:
  net:
    driver: bridge
  mongo-compose-network:
    driver: bridge